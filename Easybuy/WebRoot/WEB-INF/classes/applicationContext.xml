<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd" 
	
	>
	
    <context:component-scan 
    	base-package="com.geek">
    </context:component-scan>
    
    <!-- 导入外部的properties文件 -->  
	<context:property-placeholder location="classpath:jdbc.properties"/>
	
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">	
		<!-- 配置SessionFactory IOC-->
		<property name="configLocation"
			value="classpath:hibernate.cfg.xml">
		</property>
		
		<!-- 配置c3p0数据库连接池 -->
		<property name="dataSource">  
            <bean class="com.mchange.v2.c3p0.ComboPooledDataSource">  
                <!-- 数据连接信息 -->  
                <property name="jdbcUrl" value="${jdbcUrl}"></property>  
                <property name="driverClass" value="${driverClass}"></property>  
                <property name="user" value="${user}"></property>  
                <property name="password" value="${password}"></property>  
                  
                <!-- 其他配置 -->  
                <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->  
                <property name="initialPoolSize" value="3"></property>  
                <!--连接池中保留的最小连接数。Default: 3 -->  
                <property name="minPoolSize" value="3"></property>  
                <!--连接池中保留的最大连接数。Default: 15 -->  
                <property name="maxPoolSize" value="5"></property>  
                <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->  
                <property name="acquireIncrement" value="3"></property>  
                <!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->  
                <property name="maxStatements" value="8"></property>  
                <!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->  
                <property name="maxStatementsPerConnection" value="5"></property>  
                <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->  
                <property name="maxIdleTime" value="1800"></property>  
            </bean>  
        </property>
	</bean>
	
	<bean id="hibernateTemplete" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 配置声明式事务管理（采用注解的方式） AOP-->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
		
	<!-- 注解驱动-->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 配置Dao -->
	<bean id="easybuyNewsDAO" class="com.geek.dao.EasybuyNewsDAO"></bean>
	<bean id="easybuyCommentDAO" class="com.geek.dao.EasybuyCommentDAO"></bean>
	<bean id="easybuyProductCategoryDAO" class="com.geek.dao.EasybuyProductCategoryDAO"></bean>
	<bean id="easybuyProductDAO" class="com.geek.dao.EasybuyProductDAO"></bean>
	<bean id="easybuyAnnouncementDAO" class="com.geek.dao.EasybuyAnnouncementDAO"></bean>
	<bean id="easybuyUserDAO" class="com.geek.dao.EasybuyUserDAO"></bean>
	<bean id="easybuyOrderDAO" class="com.geek.dao.EasybuyOrderDAO"></bean>
	<bean id="easybuyOrderDetailDAO" class="com.geek.dao.EasybuyOrderDetailDAO"></bean>
	
	<!-- 配置Service -->
	<bean id="newsService" class="com.geek.service.NewsService">
		<property name="dao" ref="easybuyNewsDAO"></property>
	</bean>
	<bean id="commentService" class="com.geek.service.CommentService">
		<property name="dao" ref="easybuyCommentDAO"></property>
	</bean>
	<bean id="productService" class="com.geek.service.ProductService">
		<property name="dao" ref="easybuyProductDAO"></property>
		<property name="cdao" ref="easybuyProductCategoryDAO"></property>
	</bean>
<!-- 	private EasybuyOrderDAO orderdao; -->
<!-- 	private EasybuyOrderDetailDAO detaildao; -->
<!-- 	private EasybuyUserDAO userdao; -->
<!-- 	private EasybuyProductDAO prodao; -->
	<bean id="orderService" class="com.geek.service.OrderService">
		<property name="orderdao" ref="easybuyOrderDAO"></property>
		<property name="detaildao" ref="easybuyOrderDetailDAO"></property>
		<property name="userdao" ref="easybuyUserDAO"></property>
		<property name="prodao" ref="easybuyProductDAO"></property>
	</bean>
	<bean id="userService" class="com.geek.service.UserService">
		<property name="dao" ref="easybuyUserDAO"></property>
	</bean>
	<bean id="announcementService" class="com.geek.service.AnnouncementService">
		<property name="dao" ref="easybuyAnnouncementDAO"></property>
	</bean>
	
	<!-- 
	
	private ProductService productService;
	private NewsService newsService;
	private AnnouncementService announcementService;
	
	 -->
	<!-- 配置Action -->
	<bean id="indexAction" class="com.geek.action.IndexAction">
		<property name="productService" ref="productService"></property>
		<property name="newsService" ref="newsService"></property>
		<property name="announcementService" ref="announcementService"></property>
	</bean>
	<bean id="userAction" class="com.geek.action.UserAction">
		<property name="userService" ref="userService"></property>
	</bean>
	<bean id="productAction" class="com.geek.action.ProductAction">
		<property name="productService" ref="productService"></property>
		<property name="orderService" ref="orderService"></property>
	</bean>
	<bean id="messageAction" class="com.geek.action.MessageAction">
		<property name="announcementService" ref="announcementService" />
		<property name="newsService" ref="newsService" />
		<property name="commentService" ref="commentService" />
	</bean>
</beans>